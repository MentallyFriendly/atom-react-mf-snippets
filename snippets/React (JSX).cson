".source.js":
  #
  # Import snippets
  # =================
  "React: import empty()":
    prefix: "_i"
    body: "import ${1} from '${2}'"

  "React: import":
    prefix: "_ir"
    body: "import React from 'react'"

  "React: import with Component":
    prefix: "_irc"
    body: "import React, { Component } from 'react'"

  "React: import PropTypes":
    prefix: "_ip"
    body: "import PropTypes from 'prop-types'"

  "React: import ReactDOM":
    prefix: "_ird"
    body: "import ReactDOM from 'react-dom'"

  #
  # Component Lifecycle snippets
  # ==============================

  # Mounting
  "React: constructor(props)":
    prefix: "_cns"
    body: "constructor(props) {\n\tsuper(props)\n\tthis.state = {\n\t\t${1}: props.${2}\n\t}\n}${3}"

  "React: componentWillMount() { ... }":
    prefix: "_cwm"
    body: "componentWillMount() {\n\t${1}\n}${2}"

  "React: render() { return ... }":
    prefix: "_ren"
    body: "render() {\n\treturn (\n\t\t${1:<div></div>}\n\t)\n}"

  "React: componentDidMount() { ... }":
    prefix: "_cdm"
    body: "componentDidMount() {\n\t${1}\n}${2}"

  # Updating
  "React: componentWillReceiveProps(np) { ... }":
    prefix: "_cwr"
    body: "componentWillReceiveProps(nextProps) {\n\t${1}\n}${2}"

  "React: shouldComponentUpdate(np, ns) { ... }":
    prefix: "_scu"
    body: "shouldComponentUpdate(nextProps, nextState) {\n\t${1}\n}${2}"

  "React: componentWillUpdate(np, ns) { ... }":
    prefix: "_cwu"
    body: "componentWillUpdate(nextProps, nextState) {\n\t${1}\n}${2}"

  "React: componentDidUpdate(pp, ps) { ... }":
    prefix: "_cdup"
    body: "componentDidUpdate(prevProps, prevState) {\n\t${1}\n}${2}"

  # Unmounting
  "React: componentWillUnmount() { ... }":
    prefix: "_cwun"
    body: "componentWillUnmount() {\n\t${1}\n}${2}"

  #
  # Other Component API snippets
  # ========================
  "React: forceUpdate(...)":
    prefix: "_fup"
    body: "forceUpdate(${1:callback})"

  "React: setState({ ... })":
    prefix: "_sst"
    body: "this.setState({\n\t${1}: ${2}\n})"

  #
  # Class Property snippets
  # ==============================
  "React: static defaultProps = { ... }":
    prefix: "_scdp"
    body: "static defaultProps = {\n\t${1}: ${2}\n}"

  "React: Class.defaultProps = { ... }":
    prefix: "_cdp"
    body: "${1}.defaultProps = {\n\t${2}: ${3}\n}"

  # need displayName snippet

  #
  # PropType snippets
  # ==============================
  "React: Class.propTypes = { ... }":
    prefix: "_cpt"
    body: "${1}.propTypes = {\n\t${2}: PropTypes.${3:string}\n}"

  "React: Class.propTypes = { ... } required":
    prefix: "_cptr"
    body: "${1}.propTypes = {\n\t${2}: PropTypes.${3:string}.isRequired${4}\n}"

  # static Proptypes
  "React: static propTypes = { ... }":
    prefix: "_scpt"
    body: "static propTypes = {\n\t${1}: PropTypes.${2:string}\n}"

  "React: static propTypes = { ... } required":
    prefix: "_scptr"
    body: "static propTypes = {\n\t${1}: PropTypes.${2:string}.isRequired${3}\n}"

  # PropType blank
  "React: propType blank":
    prefix: "_pt"
    body: "${1}: PropTypes.${2:string}"
  "React: propType blank Required":
    prefix: "_ptr"
    body: "${1}: PropTypes.${2:string}.isRequired${3}"

  # PropType string
  "React: propTypes string":
    prefix: "_pts"
    body: "${1}: PropTypes.string${2}"
  "React: propTypes string Required":
    prefix: "_ptsr"
    body: "${1}: PropTypes.string.isRequired${2}"

  # PropType number
  "React: propTypes number":
    prefix: "_ptn"
    body: "${1}: PropTypes.number${2}"
  "React: propTypes number required":
    prefix: "_ptnr"
    body: "${1}: PropTypes.number.isRequired${2}"

  # PropType object
  "React: propTypes object":
    prefix: "_pto"
    body: "${1}: PropTypes.object${2}"
  "React: propTypes object required":
    prefix: "_ptor"
    body: "${1}: PropTypes.object.isRequired${2}"

  # PropType array
  "React: propTypes array":
    prefix: "_pta"
    body: "${1}: PropTypes.array${2}"
  "React: propTypes array required":
    prefix: "_ptar"
    body: "${1}: PropTypes.array.isRequired${2}"

  # PropType bool
  "React: propTypes bool":
    prefix: "_ptb"
    body: "${1}: PropTypes.bool${2}"
  "React: propTypes bool required":
    prefix: "_ptbr"
    body: "${1}: PropTypes.bool.isRequired${2}"

  # PropType element
  "React: propTypes element":
    prefix: "_pte"
    body: "${1}: PropTypes.element${2}"
  "React: propTypes element required":
    prefix: "_pter"
    body: "${1}: PropTypes.element.isRequired${2}"

  # PropType function
  "React: propTypes function":
    prefix: "_ptf"
    body: "${1}: PropTypes.func${2}"
  "React: propTypes function required":
    prefix: "_ptfr"
    body: "${1}: PropTypes.func.isRequired${2}"

  # PropType symbol
  "React: propTypes symbol":
    prefix: "_ptsym"
    body: "${1}: PropTypes.symbol${2}"
  "React: propTypes symbol required":
    prefix: "_ptsymr"
    body: "${1}: PropTypes.symbol.isRequired${2}"

  # PropType node
  "React: propTypes node":
    prefix: "_ptnode"
    body: "${1}: PropTypes.node${2}"
  "React: propTypes node required":
    prefix: "_ptnoder"
    body: "${1}: PropTypes.node.isRequired${2}"

  #
  # ContextTypes snippets
  # ==============================
  "React: Class.contextTypes = { ... }":
    prefix: "_cct"
    body: "${1}.contextTypes = {\n\t${2}: PropTypes.${3:string}\n}"

  "React: static contextTypes = { ... }":
    prefix: "_scct"
    body: "static contextTypes = {\n\t${1}: PropTypes.${2:string}\n}"

  #
  # Skeleton snippets
  # ==============================
  "React: Stateless Function":
    prefix: "_rf"
    body: "const ${1} = ({ ${2} }) => (\n\treturn (\n\t\t<div>${3}</div>\n\t)\n)"

  "React: Class":
    prefix: "_rc"
    body: "class ${1} extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>${2}</div>\n\t\t)\n\t}\n}"

  "React: Skeleton Stateless Function":
    prefix: "_srf"
    body: "import React from 'react'\n\nconst ${1} = ({ ${2} }) => (\n\treturn (\n\t\t<div>${3}</div>\n\t)\n)\n\nexport default ${1}"

  "React: Skeleton Class":
    prefix: "_src"
    body: "import React, { Component } from 'react'\n\nclass ${1} extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>${2}</div>\n\t\t)\n\t}\n}\n\nexport default ${1}"

  "React: Skeleton Stateless Function w/PropTypes":
    prefix: "_srfp"
    body: "import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst propTypes = {\n\n}\n\nconst ${1} = ({ ${2} }) => (\n\treturn (\n\t\t<div>${3}</div>\n\t)\n)\n\n${1}.propTypes = propTypes\n\nexport default ${1}"

  "React: Skeleton Class w/PropTypes":
    prefix: "_srcp"
    body: "import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst propTypes = {\n\n}\n\nclass ${1} extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>${2}</div>\n\t\t)\n\t}\n}\n\n${1}.propTypes = propTypes\n\nexport default ${1}"

  #
  # this snippets
  # ==============================
  "React: this.props.":
    prefix: "_props"
    body: "this.props.${1}"

  "React: this.state.":
    prefix: "_state"
    body: "this.state.${1}"
