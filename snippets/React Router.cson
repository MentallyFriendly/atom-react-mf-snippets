".source.js":
  #
  # Import snippets
  # =================
  "React Router: import react-router-dom":
    prefix: "_irr"
    body: "import { ${1} } from 'react-router-dom'"

  "React Router: import Link":
    prefix: "_il"
    body: "import { Link } from 'react-router-dom'"

  "React Router: import Navlink":
    prefix: "_inl"
    body: "import { NavLink } from 'react-router-dom'"

  "React Router: import BrowserRouter":
    prefix: "_ibr"
    body: "import { BrowserRouter } from 'react-router-dom'"

  "React Router: import HashRouter":
    prefix: "_ihr"
    body: "import { HashRouter } from 'react-router-dom'"

  "React Router: import MemoryRouter":
    prefix: "_imr"
    body: "import { MemoryRouter } from 'react-router'"

  "React Router: import Switch, Route":
    prefix: "_isr"
    body: "import { Switch, Route } from 'react-router'"

  "React Router: import matchPath":
    prefix: "_imp"
    body: "import { matchPath } from 'react-router'"

  "React Router: import withRouter":
    prefix: "_iwr"
    body: "import { withRouter } from 'react-router'"

  # ==================

  'Router: router skeleton':
    'prefix': '_rr'
    'body': """
      import React from 'react';
      import ReactDOM from 'react-dom';
      import Router from 'react-router';
      let { Route, DefaultRoute, NotFoundRoute, browserHistory } = Router;

      // -- Import components
      import ${1:App} from '${2}';

      ReactDOM.render((
        <Router history={browserHistory}>
          <Route handler={${1:App}} path='/'>
            ${3}
          </Route>
        </Router>
      ), document.${3:getElementById('${4:app}')});
    """

  'Router: <Route />':
    'prefix': '_rt'
    'body': "<Route path='${1}' component={${2}} />"

  'Router: Nested <Route></Route>':
    'prefix': '_nrt'
    'body': """
      <Route path='${1}' component={${2}}>
        ${5}
      </Route>
    """

  'Router: <Redirect />':
    'prefix': '_rrt'
    'body': '<Redirect from=\'${1}\' to=\'${2}\' />'

  'Router: <NotFoundRoute />':
    'prefix': '_nfrt'
    'body': '<NotFoundRoute component={${1}}/>'

  'Router: <DefaultRoute />':
    'prefix': '_drt'
    'body': '<DefaultRoute component={${1}} />'

  'Router: <Link />':
    'prefix': '_ln'
    'body': '<Link to={pathname: \'${1}\'${3:, query: \\{${4}\\}}${5:, hash: \'${6}\'}${7:, state: \\{${8}\\}}}>${9}</Link>'

  'Router: onEnter={}':
    'prefix': '_one'
    'body': 'onEnter={${1}}'

  'Router: onLeave={}':
    'prefix': '_onl'
    'body': 'onLeave={${1}}'

  'Router: setRouteLeaveHook':
    'prefix': '_slh'
    'body': """
      this.props.router.setRouteLeaveHook(
        this.props.route,
        this.routerWillLeave
      )
    """

  'Router: routerWillLeave()':
    'prefix': '_rwl'
    'body': """
      routerWillLeave() {
        if (${1}) {
          return '${2:You have unsaved information, are you sure you want to leave?}';
        }
      }
    """

  'Router: transition.abort()':
    'prefix': '_ta'
    'body': 'transition.abort();'

  'Router: transition.retry()':
    'prefix': '_tr'
    'body': 'transition.retry();'

  'Router: transition.redirect()':
    'prefix': '_trd'
    'body': 'transition.redirect(${1:to}, ${2:params}, ${3:query});'
